// <auto-generated />
using HT.CheckerApp.API;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace HT.CheckerApp.API.Migrations
{
    [DbContext(typeof(DataBaseContext))]
    partial class DataBaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.2-rtm-10011")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("HT.CheckerApp.API.Models.PBDrawResult", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("CreationDate");

                    b.Property<int>("Draw");

                    b.Property<bool>("IsActive");

                    b.Property<string>("LastUpdatedBy");

                    b.Property<DateTime>("LastUpdatedDate");

                    b.Property<string>("PBNo");

                    b.Property<int>("Prize");

                    b.Property<double>("PrizeValue");

                    b.Property<DateTime>("Validity");

                    b.HasKey("Id");

                    b.ToTable("PBDrawResults");
                });

            modelBuilder.Entity("HT.CheckerApp.API.Models.PBOnDemand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsActiveSubscription");

                    b.Property<string>("Keyword");

                    b.Property<string>("LastUpdatedBy");

                    b.Property<DateTime>("LastUpdatedDate");

                    b.Property<string>("MSISDN");

                    b.Property<string>("PBNo");

                    b.Property<DateTime>("PrizeDate");

                    b.HasKey("Id");

                    b.ToTable("PBOnDemand");
                });

            modelBuilder.Entity("HT.CheckerApp.API.Models.PBSubscriptionRevenue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<int>("Cycle");

                    b.Property<bool>("IsActive");

                    b.Property<string>("LastUpdatedBy");

                    b.Property<DateTime>("LastUpdatedDate");

                    b.Property<string>("MSISDN");

                    b.Property<DateTime>("SubscriptionDate");

                    b.Property<string>("SubscriptionType");

                    b.HasKey("Id");

                    b.ToTable("PBSubscriptionRevenues");
                });

            modelBuilder.Entity("HT.CheckerApp.API.Models.PBSubscriptions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<bool>("IsActive");

                    b.Property<string>("Keyword");

                    b.Property<string>("LastUpdatedBy");

                    b.Property<DateTime>("LastUpdatedDate");

                    b.Property<string>("MSISDN");

                    b.Property<string>("PBNo");

                    b.Property<DateTime>("PrizeDate");

                    b.Property<DateTime>("SubStartedDate");

                    b.HasKey("Id");

                    b.ToTable("PBSubscriptions");
                });
#pragma warning restore 612, 618
        }
    }
}
